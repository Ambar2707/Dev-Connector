{"ast":null,"code":"var _jsxFileName = \"/home/ambar/myapp/client/src/components/profile/Me.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Me = ({\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  auth\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, profile == null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 35\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"No experience credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(ProfileEducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }\n  }, \"No education credentials\")), profile.githubusername && /*#__PURE__*/React.createElement(ProfileGithub, {\n    username: profile.githubusername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }))));\n};\n\nMe.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Me);","map":{"version":3,"sources":["/home/ambar/myapp/client/src/components/profile/Me.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getCurrentProfile","Me","profile","loading","auth","isAuthenticated","user","_id","experience","length","map","education","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Me = ({ getCurrentProfile, profile: { profile, loading }, auth }) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n        {profile==null||loading ? <Spinner/> :(\n            <Fragment>\n                <Link to=\"/profiles\" className=\"btn btn-light\">\n                    Back To Profiles\n                </Link>\n                {auth.isAuthenticated &&\n                    auth.loading === false &&\n                    auth.user._id === profile.user._id && (\n                    <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                        Edit Profile\n                    </Link>\n                )}\n                <div className=\"profile-grid my-1\">\n                  <ProfileTop profile={profile} />\n                  <ProfileAbout profile={profile} />\n                  <div className=\"profile-exp bg-white p-2\">\n                    <h2 className=\"text-primary\">Experience</h2>\n                    {profile.experience.length > 0 ? (\n                    <Fragment>\n                      {profile.experience.map((experience) => (\n                        <ProfileExperience\n                          key={experience._id}\n                          experience={experience}\n                        />\n                      ))}\n                    </Fragment>\n                  ) : (\n                    <h4>No experience credentials</h4>\n                  )}\n                  </div>\n                  <div className=\"profile-edu bg-white p-2\">\n                    <h2 className=\"text-primary\">Education</h2>\n                    {profile.education.length > 0 ? (\n                      <Fragment>\n                        {profile.education.map((education) => (\n                          <ProfileEducation\n                            key={education._id}\n                            education={education}\n                          />\n                        ))}\n                      </Fragment>\n                    ) : (\n                      <h4>No education credentials</h4>\n                    )}\n                  </div>\n                  {profile.githubusername && (\n                    <ProfileGithub username={profile.githubusername} />\n                  )}\n                </div>\n            </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nMe.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Me);"]},"metadata":{},"sourceType":"module"}