{"ast":null,"code":"var _jsxFileName = \"/home/ambar/myapp/client/src/components/auth/Register.js\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert.js';\nimport { register } from '../../actions/auth.js';\nimport PropTypes from 'prop-types';\nexport const Register = ({\n  setAlert,\n  register\n}) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password != password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({\n        name,\n        email,\n        password\n      }); // what I could have done without redux\n      // const newUser={\n      //     name: name,\n      //     email: email,\n      //     password: password\n      // }\n      // try {\n      //     const config ={\n      //         headers:{\n      //             'Content-Type': 'application/json'\n      //         }\n      //     };\n      //     const body = JSON.stringify(newUser);\n      //     const res= await axios.post('/api/users', body, config);\n      //     console.log(res.data);\n      // } catch (err) {\n      //     console.error(err.response.data);\n      // }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 33\n    }\n  }), \" Create Your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: e => onChange(e) // required \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e) // required \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    className: \"form-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"This site uses Gravatar so if you want a profile image, use a Gravatar email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\" // minLength=\"6\"\n    ,\n    value: password,\n    onChange: e => onChange(e) // required \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"password2\" // minLength=\"6\"\n    ,\n    value: password2,\n    onChange: e => onChange(e) // required \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    value: \"Register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 42\n    }\n  }, \"Sign In\")));\n};\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  setAlert,\n  register\n})(Register);","map":{"version":3,"sources":["/home/ambar/myapp/client/src/components/auth/Register.js"],"names":["React","Fragment","useState","connect","Link","setAlert","register","PropTypes","Register","formData","setFormData","name","email","password","password2","onChange","e","target","value","onSubmit","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {setAlert} from '../../actions/alert.js';\nimport {register} from '../../actions/auth.js';\nimport PropTypes from 'prop-types';\n\n\nexport const Register = ({setAlert, register}) => {\n    const [formData, setFormData]= useState({\n        name:\"\",\n        email: \"\",\n        password:\"\",\n        password2:\"\"\n    });\n\n    const {name, email, password, password2} = formData;\n    const onChange = (e) => {setFormData({...formData, [e.target.name] : e.target.value})}\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if(password!=password2){\n            setAlert('Passwords do not match', 'danger');\n        }else{\n            register({name, email, password});\n            // what I could have done without redux\n\n            // const newUser={\n            //     name: name,\n            //     email: email,\n            //     password: password\n            // }\n            // try {\n            //     const config ={\n            //         headers:{\n            //             'Content-Type': 'application/json'\n            //         }\n            //     };\n            //     const body = JSON.stringify(newUser);\n            //     const res= await axios.post('/api/users', body, config);\n            //     console.log(res.data);\n\n            // } catch (err) {\n            //     console.error(err.response.data);\n            // }\n        }\n    };\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">Sign Up</h1>\n            <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\n            \n            <form className=\"form\" onSubmit={e => onSubmit(e)} >\n                <div className=\"form-group\">\n                    <input \n                        type=\"text\" \n                        placeholder=\"Name\" \n                        name=\"name\" \n                        value={name} \n                        onChange={e => onChange(e) } \n                        // required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input \n                        type=\"email\" \n                        placeholder=\"Email Address\" \n                        name=\"email\" \n                        value={email} \n                        onChange={e => onChange(e) } \n                        // required \n                    />\n                    <small className=\"form-text\"\n                        >This site uses Gravatar so if you want a profile image, use a\n                        Gravatar email\n                    </small>\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        // minLength=\"6\"\n                        value={password} \n                        onChange={e => onChange(e) } \n                        // required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                        name=\"password2\"\n                        // minLength=\"6\"\n                        value={password2} \n                        onChange={e => onChange(e) } \n                        // required \n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n                \n            </form>\n            \n            <p className=\"my-1\">\n                Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n        </Fragment>\n    )\n}\nRegister.propTypes={\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {setAlert, register})(Register);\n"]},"metadata":{},"sourceType":"module"}