{"ast":null,"code":"var _jsxFileName = \"/home/ambar/myapp/client/src/components/profile-forms/AddExperience.js\";\nimport React, { Fragment, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({\n  addExperience,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n  const [toDateDisabled, toggleDisabled] = useState(false);\n  const {\n    company,\n    title,\n    location,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Add An Experience\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-code-branch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), \" Add any developer/programming positions that you have had in the past\"), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"* = required field\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      addExperience(formData, history);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Job Title\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Company\",\n    name: \"company\",\n    value: company,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Location\",\n    name: \"location\",\n    value: location,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"From Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"from\",\n    value: from,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: \"current\",\n    checked: current,\n    value: current,\n    onChange: () => {\n      setFormData({ ...formData,\n        current: !current\n      });\n      toggleDisabled(!toDateDisabled);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }), ' ', \"Current Job\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"To Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"to\",\n    value: to,\n    onChange: e => onChange(e),\n    disabled: toDateDisabled ? 'disabled' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Job Description\",\n    value: description,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btn btn-light my-1\",\n    href: \"dashboard.html\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Go Back\")));\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addExperience\n})(withRouter(AddExperience));","map":{"version":3,"sources":["/home/ambar/myapp/client/src/components/profile-forms/AddExperience.js"],"names":["React","Fragment","useState","withRouter","PropTypes","connect","addExperience","AddExperience","history","formData","setFormData","company","title","location","from","to","current","description","toDateDisabled","toggleDisabled","onChange","e","target","name","value","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react'\nimport { withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {addExperience} from '../../actions/profile';\n\nconst AddExperience = ({addExperience, history}) => {\n    const [formData, setFormData] = useState({\n        company: '',\n        title: '',\n        location: '',\n        from: '',\n        to: '',\n        current: false,\n        description: ''\n    });\n    const [toDateDisabled, toggleDisabled] = useState(false);\n\n    const { company, title, location, from, to, current, description } = formData;\n\n    const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n\n    return (\n        <Fragment>\n            <h1 className=\"large text-primary\">\n            Add An Experience\n            </h1>\n            <p className=\"lead\">\n                <i className=\"fas fa-code-branch\"></i> Add any developer/programming\n                positions that you have had in the past\n            </p>\n            <small>* = required field</small>\n            <form className=\"form\"\n                onSubmit={e => {\n                    e.preventDefault();\n                    addExperience(formData, history);\n                }}\n            >\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Job Title'\n                        name='title'\n                        value={title}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='* Company'\n                        name='company'\n                        value={company}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        type='text'\n                        placeholder='Location'\n                        name='location'\n                        value={location}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className='form-group'>\n                    <h4>From Date</h4>\n                    <input\n                        type='date'\n                        name='from'\n                        value={from}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className='form-group'>\n                    <p>\n                        <input\n                        type='checkbox'\n                        name='current'\n                        checked={current}\n                        value={current}\n                        onChange={() => {\n                            setFormData({ ...formData, current: !current });\n                            toggleDisabled(!toDateDisabled);\n                        }}\n                        />{' '}\n                        Current Job\n                    </p>\n                </div>\n                <div className='form-group'>\n                    <h4>To Date</h4>\n                    <input\n                        type='date'\n                        name='to'\n                        value={to}\n                        onChange={e => onChange(e)}\n                        disabled={toDateDisabled ? 'disabled' : ''}\n                    />\n                </div>\n                <div className='form-group'>\n                    <textarea\n                        name='description'\n                        cols='30'\n                        rows='5'\n                        placeholder='Job Description'\n                        value={description}\n                        onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\n                <a className=\"btn btn-light my-1\" href=\"dashboard.html\">Go Back</a>\n            </form>\n        </Fragment>\n    )\n}\n\nAddExperience.propTypes = {\n    addExperience: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {addExperience})(withRouter(AddExperience))\n"]},"metadata":{},"sourceType":"module"}